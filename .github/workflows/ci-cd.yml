name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      backend-image: tsaigopal/budget-planner-backend:latest
      frontend-image: tsaigopal/budget-planner-frontend:latest

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build & push backend image with caching
      - name: Build & push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: tsaigopal/budget-planner-backend:latest
          cache-from: type=registry,ref=tsaigopal/budget-planner-backend:latest
          cache-to: type=registry,mode=max,ref=tsaigopal/budget-planner-backend:latest

      # 5. Build & push frontend image with caching
      - name: Build & push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: tsaigopal/budget-planner-frontend:latest
          cache-from: type=registry,ref=tsaigopal/budget-planner-frontend:latest
          cache-to: type=registry,mode=max,ref=tsaigopal/budget-planner-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # 1. Checkout repo (needed for docker-compose.yml)
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. SSH to EC2 and deploy
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install git if missing
            if ! command -v git &> /dev/null; then
                sudo dnf install -y git
            fi

            # Install Docker if missing (Amazon Linux)
            if ! command -v docker &> /dev/null; then
              sudo dnf update -y
              sudo dnf install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ec2-user
              newgrp docker
            fi

            # Install docker-compose manually if missing
            if ! command -v docker-compose &> /dev/null; then
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.28.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            # Remove old project folder and clone repo
            rm -rf ~/budget_planner
            git clone https://github.com/2300030889-THOTANAGASAIGOPAL/budget_planner.git ~/budget_planner
            cd ~/budget_planner

            

            # Pull latest images and start containers
            docker-compose pull
            docker-compose up -d
