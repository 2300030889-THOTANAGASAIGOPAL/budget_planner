name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 4. Build & push backend image
      - name: Build & push backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: tsaigopal/budget-planner-backend:latest

      # 5. Build & push frontend image
      - name: Build & push frontend
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: tsaigopal/budget-planner-frontend:latest

      # 6. Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Install Docker if missing
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo apt-get update
              sudo apt-get install -y docker.io
            fi

            # Install docker-compose manually if missing
            if ! command -v docker-compose &> /dev/null; then
              echo "Installing docker-compose manually..."
              sudo curl -L "https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
              sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose || true
            fi

            # Ensure project directory exists or reset it
            if [ ! -d ~/budget_planner/.git ]; then
              rm -rf ~/budget_planner
              git clone https://github.com/2300030889-THOTANAGASAIGOPAL/budget_planner.git ~/budget_planner
              cd ~/budget_planner
            else
              cd ~/budget_planner
              git reset --hard
              git pull origin main
            fi

            # Clean unused Docker resources
            docker system prune -af || true

            # Deploy with docker-compose
            docker-compose pull
            docker-compose up -d
